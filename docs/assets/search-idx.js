export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home Record Types This is a project based on work by Evan Callahan (formerly of Groundwire, and now at Salesforce) who wrote this class (repo has been deleted - Sadface) a long time ago to reduce the number of describe calls required to work with Record Types. I've updated the project(by pulling test code out of the main class - that's how old it was!) and have added some additional methods. The included test class has 100% coverage, so pull this into your org and get cracking! Of note: The test code assumes that you have no record types for the Solution object. If you do, you may need to remove that test method. The Code The class and test class are found in this folder . Feel free to copy/paste directly into your org. Features Given combinations of an sObject name, Record Type name, Record Type developer name, and Record Type Id, this class will let you return the other possible parameters. Give it an sObject name and a Record Type developer name, and get the Record Type Id. The main purpose is to minimize describe calls, which will speed up your code. Documentation Documentation (generated with ApexDox ) Package Installation Installation(with VCS) Clone this repository and run bash scripts/orginit.sh  to set up a scratch org with the classes installed and a single Account Record Type. To set up a scratch org without creating a Record Type, run bash scripts/orginit-norecordtypes.sh Changelog 2024-03 All methods are now case-insensitive Dynamic describe methods remove need for global describe(faster code!) Move Solution tests - does not increase coverage - to unpackaged test class 2024-02 Enhance SelectList methods Update to API 60.0 Increase code coverage and test cases 2023-09 Overload getRecordTypeFromId so it doesn't require a SobjectType string Release unlocked package 2023-08 Add methods to get default RecordTypeId, handling situation where no RT is on the Profile but at least one is avaialble via Permission Set. Add test methods against Account and Solution objects, as we assume Solution has no defined record types.(Change for your org if you have them.) Include table of all methods on documentation site 2022-03 BREAKING CHANGE: Replaced \"DeveloperName\" with \"DevName\" in all method names. Update your code to refer to the new methods. 2022-03 Add maps Id => Name and Id => DeveloperName for ease of use when wanting to refer to a record type by Id without including the object, since Id is globally unique 2022-01 Initial Release Code Header Written by Evan Callahan, copyright © 2010 Groundwire This program is released under the GNU General Public License . http://www.gnu.org/licenses/ This class is meant to allow for access to Record Type information from within other classes. It is called statically, and therefore will supply the same information to all calls made from within one transaction, or set of trigger calls. This is beneficial because this info should be the same for all calls in a transaction, and by calling it statically we reduce the calls that are made, making the total transaction more efficient. Updated by David Schach, copyright © X-Squared on Demand Usage recommendation: Always use DeveloperName instead of Name, as this is more likely to be hard-coded in places, while the Name is actually a label and may change(especially due to user language). Library Methods (Full documentation at https://dschach.github.io/record-types ) Most Common Methods These are the most common methods to be used. They are the fastest ways to get a Record Type Id from an object name and the developer name, for example. There are some overloaded methods included for historical purposes(the ones that accept a Record Type Id and an object name and return the developer name). While the object name is, technically, optional, that method is faster because it does not require memoizing a SOQL query. Parameters / Output Id Name DeveloperName objectName, recordTypeName getRecordTypeIdFromName objectName, recordTypeName getRecordTypeDevNameFromName objectName, recordTypeDevName getRecordTypeIdFromDevName objectName, recordTypeDevName getRecordTypeNameFromDevName objectName, recordTypeId getRecordTypeNameFromId objectName, recordTypeId getRecordTypeDevNameFromId recordTypeId getRecordTypeNameFromId recordTypeId getRecordTypeDevNameFromId Helper Methods These methods check record types available to the current/running user. Parameters / Output Boolean(yes/no) objectName, recordTypeDevName isRecordTypeAvailable objectName, recordTypeDevName isRecordTypeDefault Less Common Methods The most useful of these may be the SelectList generators for Visualforce. However, if you are using LWC, you may prefer to use some of the other methods and to parse the returned list of RecordTypeInfo items yourself. Parameters / Output Schema.RecordTypeInfo Set<Id> Map<String, Id> SelectList recordTypeId getRecordTypeFromId objectName, recordTypeId getRecordTypeFromId objectName, recordTypeDevName getRecordTypeFromDevName objectName, Set<recordTypeDevName> getAvailableRecordTypesIdSet objectName, Set<recordTypeDevName> getRecordTypeIdSetFromDevNames objectName getRecordTypeDevNameIdMap objectName getRecordTypeNameIdMap objectName getAvailableRecordTypeDevNameIdMap objectName getAvailableRecordTypeNameIdMap objectName getAllRecordTypesForSelectList objectName getAvailableRecordTypesForSelectList objectName getStringRecordTypesForSelectList"
    },
    {
        "title": "changelog",
        "fileName": "changelog.html",
        "text": "Changelog 1.5.0 (2024-02-15) Features Update SelectList methods - all and available(f9b9812 ) Chores Release package v1.5.0(#133 )(f9b9812 ) Release package version 1.4.0(#81 )(46463a7 ) Renumber to release 1.5.0(03f6794 ) Documentation ApexDox css files cleanup(f9b9812 ) Include build section in changelogs(a9faa41 ) readme:  Fix deploy button images(d3717fc ) readme:  Update method tables(8b123c3 ) Update ApexDox(f9b9812 ) Update method tables(f9b9812 ) Tests Enhance testing for with/without record types(f9b9812 ) Include unpackaged SelectList test page(f9b9812 ) Styles Prettier:  Update Prettier config file(f9b9812 ) prettier:  Update prettier config to single quotes(078fe29 ) Run prettier on all files(bbff33c ) 1.4.0 (2023-09-17) Features Overload get RT from Id(#79 )(1344b75 ) Documentation Update ApexDox(f853dbc ) Update ApexDox(a3cded8 ) Continuous Integration deps:  Bump actions/checkout from 3 to 4(#71 )(2fb0b6d ) 1.3.0 (2023-08-19) Features Handle inactive RTs and RTs via PermSet(#63 )(064e1aa ) Bug Fixes Remove redundant methods, update docs(#66 )(3487d30 ) Documentation apexdox:  Update ApexDox, Changelog(#65 )(ee2d5de ) 1.2.1 (2023-08-16) Build System ApexDox:  Update ApexDox(#62 )(ae8063b ) deps-dev:  Bump @prettier/plugin-xml from 2.2.0 to 3.1.1(#56 )(d2f0a8a ) deps-dev:  Bump @prettier/plugin-xml from 3.1.1 to 3.2.0(#58 )(8ab6421 ) deps-dev:  Bump lint-staged from 13.2.0 to 13.2.1(#45 )(b8539fd ) deps-dev:  Bump lint-staged from 13.2.1 to 13.2.2(#49 )(a058181 ) deps-dev:  Bump lint-staged from 13.2.2 to 13.2.3(#52 )(f43ed99 ) deps-dev:  Bump lint-staged from 13.2.3 to 14.0.0(#59 )(3994458 ) deps-dev:  Bump prettier and prettier-plugin-apex(#53 )(1c8fa7b ) deps-dev:  Bump prettier from 2.8.4 to 2.8.5(#42 )(5e23e23 ) deps-dev:  Bump prettier from 2.8.5 to 2.8.6(#43 )(5995994 ) deps-dev:  Bump prettier from 2.8.6 to 2.8.7(#44 )(49e70d4 ) deps-dev:  Bump prettier from 2.8.7 to 2.8.8(#46 )(4511236 ) deps-dev:  Bump prettier from 3.0.0 to 3.0.1(#57 )(773c11c ) deps-dev:  Bump prettier from 3.0.1 to 3.0.2(#60 )(93c293e ) deps-dev:  Bump prettier-plugin-apex from 1.12.0 to 1.13.0(#47 )(0bbb6b5 ) deps:  Bump yaml from 2.2.1 to 2.2.2(#48 )(3bfb579 ) sfdx:  Update sfdx cli to sf cli(#61 )(eb80d9e ) Documentation ApexDox:  Update highlight.js library(b8f7630 ) Bug Fixes build:  Fix pull request GitHub action(9f55805 ) Chores linguist:  Exclude vendor js files(#50 )(9d7bcfa ) 1.2.0 (2023-03-14) Features Implement release-please(#40 )(d254692 ) Bug Fixes Bump @sideway/formula from 3.0.0 to 3.0.1(5bca1b8 ) Bump lint-staged from 13.1.1 to 13.1.2(2ef66b1 ) Bump npm from 9.4.2 to 9.5.0(174b6c7 ) PR testing only on force-app path(1395d3a ) Continuous Integration dependabot:  No scratch org on dependabot(#38 )(c8d21dc ) dependabot:  Scope dependabot PRs(dc02bba ) Build System Bump lint-staged from 13.1.2 to 13.2.0(#37 )(f981c20 ) Bump prettier from 2.8.3 to 2.8.4(d01b32f ) npm:  Bump npm from 9.4.2 to 9.5.0(#36 )(54c0f2a ) npm:  Remove npm dev-dependency(aea80de ) 1.1.0 (2023-02-08) Features API 56, new methods(#27 )(cb53adc ) Bug Fixes Bump lint-staged from 13.1.0 to 13.1.1(#25 )(ce97526 ) Bump npm from 9.4.1 to 9.4.2(#26 )(1aa9923 ) Change Active to Available(8973e2b ) Change Active to Available(76e1d0b ) Highlight 11.7(632b1fe ) Highlight 11.7 typo(8973e2b ) Miscellaneous Chores Release 1.1.0(3be676c ) 1.1.0 (2023-02-07) Features API 56, new methods(#27 )(cb53adc ) Bug Fixes bump lint-staged from 13.1.0 to 13.1.1(#25 )(ce97526 ) bump npm from 9.4.1 to 9.4.2(#26 )(1aa9923 ) Miscellaneous Chores release 1.1.0(3be676c )"
    },
    {
        "title": "RecordTypes",
        "fileName": "RecordTypes.html",
        "text": "RecordTypes This class is allows for easy, readable access to Record Type information from other classes.  Written by Evan Callahan, copyright 2010 Groundwire Updated by David Schach, copyright 2021-2024 X-Squared on Demand  This program is released under the GNU General Public License. http://www.gnu.org/licenses/  This class is meant to allow for access to Record Type information from within other classes.  It is called statically, and therefore will supply the same information to all calls made from within one transaction, or set of trigger calls. This is beneficial because this info should be the same for all calls in a transaction, and by calling it statically we reduce the calls that are made, making the total transaction more efficient.  Usage recommendation: Always use DeveloperName instead of Name , as this is more likely to be hard-coded in places, while the Name is actually a label and may change(especially due to user language).  An easy-to-read table with the various methods, their inputs, and their outputs is available at Record Types  LICENSE Copyright Evan Callahan & David Schach This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or(at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. Signature global inherited sharing class RecordTypes See RecordTypesTest Author Evan Callahan , Groundwire Since 2010 Author David Schach , X-Squared on Demand Since 2021 Author Nicolas Vasquez, Globant Since 2022 RecordTypes Properties Name Signature Description allRecordTypes private static Map<String, List<Schema.RecordTypeInfo>> allRecordTypes map of all Record Types by sObject name(lowercase), including inactive and unavailable availableRecordTypesMap private static Map<String, List<Schema.Recordtypeinfo>> availableRecordTypesMap List of available(to the running user) Record Type Info sObjects defaultRecordTypeIds private static Map<String, Id> defaultRecordTypeIds Map of default Record Type  Ids for the running user defaultRecordTypes private static Map<String, Schema.RecordTypeInfo> defaultRecordTypes Map of object name to the default Schema.RecordTypeInfo  object for that object recordTypesByDevName private static Map<String, Map<String, Schema.RecordTypeInfo>> recordTypesByDevName Map of Record Types by sObject name(lowercase), then by DeveloperName recordTypesById private static Map<String, Map<Id, Schema.RecordTypeInfo>> recordTypesById Map of Record Types by sObject name(lowercase), then by Id recordTypesByName private static Map<String, Map<String, Schema.RecordTypeInfo>> recordTypesByName Map of Record Types by sObject name(lowercase), then by Name recordTypesIdMap private static Map<Id, RecordType> recordTypesIdMap Lazy-loaded, memoized map of queried RecordType  records by Id sObjectDescribes private static Map<String, Schema.DescribeSObjectResult> sObjectDescribes Hold Sobject describe results as we need them RecordTypes Methods clearMapsInTest() If we are running a test, clear sObject maps. We do this to avoid using @testVisible on the maps themselves This is private and testvisible so it cannot be called in production code context fillMapsForObject(objectName) Gets record type maps for a new sObject We check in each public method if the sObject has already been described so we do not eagerly load DescribeSObjectResult getAllRecordTypesForSelectList(objectName) Make a Visualforce picklist with ALL RecordType  Names displayed and the RecordType  Id as the value Unavailable Record Types will be _disabled_ in the picklist. getAllRecordTypesForSelectList(objectName, disableUnavailable) Make a Visualforce picklist with ALL RecordType  Names displayed and the RecordType  Id as the value Unavailable Record Types can be disabled in the picklist by setting disableUnavailable  to true .. getAvailableRecordTypeDevNameIdMap(objectName) Gives a map of all available(to the running user) RecordTypeId s by developername  for an sObject getAvailableRecordTypeNameIdMap(objectName) Gives a map of all available(to the running user) RecordTypeId s by name for an sObject getAvailableRecordTypesForSelectList(objectName) Make a Visualforce picklist of only available Record Types with the RecordType  Name displayed and the RecordType  Id as the value. No options are disabled. getAvailableRecordTypesIdSet(objectName) Gives a set of all available(to the running user) RecordTypeId s for an sObject getDefaultRecordType(objectName) Given an sObject Name, return the default Record Type Id for the running user getDefaultRecordTypeDevName(objectName) Given an sObject Name, return the default Record Type DeveloperName for the running user getDefaultRecordTypeId(objectName) Given an sObject Name, return the default Record Type Id for the running user getDefaultRecordTypeName(objectName) Given an sObject Name, return the default Record Type Name for the running user getRecordTypeDevNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  DeveloperName This saves a query on the RecordType  object getRecordTypeDevNameFromId(recordTypeId) Generate map of all record type developerNames by Id & return Record Type DeveloperName This is an overloaded method for efficiency, using only the Id getRecordTypeDevNameFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead getRecordTypeDevNameIdMap(objectName) Gives a map of all record type IDs by DeveloperName for an sObject Returns Master record type if no other RTs available getRecordTypeFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id getRecordTypeFromId(recordTypeId) Given a RecordType  Id, return the Record Type  object getRecordTypeFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the Record Type  object getRecordTypeFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  object Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead getRecordTypeIdFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id This should be the most-used method in this class getRecordTypeIdFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead getRecordTypeIdSetFromDevNames(objectName, recordTypeDevNameSet) Gives a set of RecordType  Ids from an sObject and a set of RecordType  DeveloperNames getRecordTypeNameFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Name getRecordTypeNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  Name getRecordTypeNameFromId(recordTypeId) Generate map of all record type names by Id & return Record Type Name getRecordTypeNameIdMap(objectName) Gives a map of all RecordType  IDs by name for an sObject getRecordTypesForObject(objectName) Gives a list of all the RecordTypeInfo  object records for an sObject This list has more items than just the record types available to the running user. This method has no immediately obvious uses, but perhaps an outside library will need this list for, say, a project for a LWC. getStringRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Name as the value isRecordTypeAvailable(objectName, recordTypeDevName) Is this record type(identified by developer name) available(and active) for the current user? isRecordTypeDefault(objectName, recordTypeDevName) Is this record type(identified by developer name) the default record type for the current user? clearMapsInTest() If we are running a test, clear sObject maps. We do this to avoid using @testVisible on the maps themselves This is private and testvisible so it cannot be called in production code context Signature @testVisible private static void clearMapsInTest() fillMapsForObject(objectName) Gets record type maps for a new sObject We check in each public method if the sObject has already been described so we do not eagerly load DescribeSObjectResult Signature private static void fillMapsForObject(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Author David Schach getAllRecordTypesForSelectList(objectName) Make a Visualforce picklist with ALL RecordType  Names displayed and the RecordType  Id as the value Unavailable Record Types will be _disabled_ in the picklist. Signature global static List<SelectOption> getAllRecordTypesForSelectList(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<SelectOption>  Visualforce SelectOption list Author David Schach getAllRecordTypesForSelectList(objectName, disableUnavailable) Make a Visualforce picklist with ALL RecordType  Names displayed and the RecordType  Id as the value Unavailable Record Types can be disabled in the picklist by setting disableUnavailable  to true .. Signature global static List<SelectOption> getAllRecordTypesForSelectList(String objectName, Boolean disableUnavailable) Parameters objectName Type: String SObject name(with __c if custom, etc) disableUnavailable Type: Boolean Should we disable unavailable RTs in the SelectList? Returns List<SelectOption>  Visualforce SelectOption list Author David Schach getAvailableRecordTypeDevNameIdMap(objectName) Gives a map of all available(to the running user) RecordTypeId s by developername  for an sObject Signature global static Map<String, Id> getAvailableRecordTypeDevNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Authors Nicolas Vasquez, David Schach Since 2023 Use available record types map getAvailableRecordTypeNameIdMap(objectName) Gives a map of all available(to the running user) RecordTypeId s by name for an sObject Signature global static Map<String, Id> getAvailableRecordTypeNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Authors Nicolas Vasquez, David Schach Since 2023 Use available record types map getAvailableRecordTypesForSelectList(objectName) Make a Visualforce picklist of only available Record Types with the RecordType  Name displayed and the RecordType  Id as the value. No options are disabled. Signature global static List<SelectOption> getAvailableRecordTypesForSelectList(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<SelectOption>  Visualforce SelectOption list Author Evan Callahan Example RecordTypes.getAvailableRecordTypesForSelectList('Account') System.SelectOption[value=\"<SFID>\", label=\"Available\", disabled=\"false\"] System.SelectOption[value=\"<SFID>\", label=\"Default\", disabled=\"false\"] System.SelectOption[value=\"<SFID>\", label=\"Inactive\", disabled=\"true\"] getAvailableRecordTypesIdSet(objectName) Gives a set of all available(to the running user) RecordTypeId s for an sObject Signature global static Set<Id> getAvailableRecordTypesIdSet(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Set<Id>  Map<RecordType Name, RecordType Id> Authors Nicolas Vasquez, David Schach Since 2024 Use available record types map to generate set getDefaultRecordType(objectName) Given an sObject Name, return the default Record Type Id for the running user Signature @SuppressWarnings('PMD.AvoidDeeplyNestedIfStmts') global static Schema.RecordTypeInfo getDefaultRecordType(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Id  Default Record Type Id for the running user for this object getDefaultRecordTypeDevName(objectName) Given an sObject Name, return the default Record Type DeveloperName for the running user Signature global static String getDefaultRecordTypeDevName(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns String  Default Record Type DeveloperName for the running user for this object getDefaultRecordTypeId(objectName) Given an sObject Name, return the default Record Type Id for the running user Signature global static Id getDefaultRecordTypeId(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Id  Default Record Type Id for the running user for this object getDefaultRecordTypeName(objectName) Given an sObject Name, return the default Record Type Name for the running user Signature global static String getDefaultRecordTypeName(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns String  Default Record Type Name for the running user for this object getRecordTypeDevNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  DeveloperName This saves a query on the RecordType  object Signature global static String getRecordTypeDevNameFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns RecordType  DeveloperName See getRecordTypeDevNameFromId Author David Schach getRecordTypeDevNameFromId(recordTypeId) Generate map of all record type developerNames by Id & return Record Type DeveloperName This is an overloaded method for efficiency, using only the Id Signature global static String getRecordTypeDevNameFromId(Id recordTypeId) Parameters recordTypeId Type: Id RecordTypeId Returns String  Record Type Name See getRecordTypeDevNameFromId Author David Schach Since 2022-03-29 getRecordTypeDevNameFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead Signature global static String getRecordTypeDevNameFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns RecordType.DeveloperName Author David Schach Example RecordTypes.getRecordTypeDevNameFromName('Account','Person Account') getRecordTypeDevNameIdMap(objectName) Gives a map of all record type IDs by DeveloperName for an sObject Returns Master record type if no other RTs available Signature global static Map<String, Id> getRecordTypeDevNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<recordTypeDevName, RecordType Id> Author David Schach getRecordTypeFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id Signature global static Schema.RecordTypeInfo getRecordTypeFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach Example RecordTypes.getRecordTypeFromDevName('Account','Person_Account') getRecordTypeFromId(recordTypeId) Given a RecordType  Id, return the Record Type  object Signature global static Schema.RecordTypeInfo getRecordTypeFromId(Id recordTypeId) Parameters recordTypeId Type: Id RecordType Id Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach getRecordTypeFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the Record Type  object Signature global static Schema.RecordTypeInfo getRecordTypeFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach getRecordTypeFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  object Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead Signature global static Schema.RecordTypeInfo getRecordTypeFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach Example RecordTypes.getRecordTypeFromName('Account','Person Account') getRecordTypeIdFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id This should be the most-used method in this class Signature global static Id getRecordTypeIdFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns RecordType Id Author David Schach Example RecordTypes.getRecordTypeIdFromDevName('Account','Person_Account') getRecordTypeIdFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use a method with RecordType.DeveloperName  instead Signature global static Id getRecordTypeIdFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns RecordType Id Author David Schach Example RecordTypes.getRecordTypeIdFromName('Account','Person Account') getRecordTypeIdSetFromDevNames(objectName, recordTypeDevNameSet) Gives a set of RecordType  Ids from an sObject and a set of RecordType  DeveloperNames Signature global static Set<Id> getRecordTypeIdSetFromDevNames(String objectName, Set<String> recordTypeDevNameSet) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevNameSet Type: Set<String> Set of DeveloperNames Returns Set<Id>  All RecordType  IDs for a given sObject Author David Schach Example Set<String> rtNames = new Set<String> {'Person_Account', 'Customer'}; getRecordTypeIdSetFromDevNames('Account', rtNames); getRecordTypeNameFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Name Signature global static String getRecordTypeNameFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns RecordType Name Author David Schach Example RecordTypes.getRecordTypeNameFromDevName('Account','Person_Account') getRecordTypeNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  Name Signature global static String getRecordTypeNameFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns RecordType Name Author David Schach getRecordTypeNameFromId(recordTypeId) Generate map of all record type names by Id & return Record Type Name Signature global static String getRecordTypeNameFromId(Id recordTypeId) Parameters recordTypeId Type: Id RecordTypeId Returns String  Record Type Name Author David Schach Since 2022-03-29 getRecordTypeNameIdMap(objectName) Gives a map of all RecordType  IDs by name for an sObject Signature global static Map<String, Id> getRecordTypeNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Author Evan Callahan getRecordTypesForObject(objectName) Gives a list of all the RecordTypeInfo  object records for an sObject This list has more items than just the record types available to the running user. This method has no immediately obvious uses, but perhaps an outside library will need this list for, say, a project for a LWC. Signature global static List<Schema.RecordTypeInfo> getRecordTypesForObject(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<Schema.RecordTypeInfo>  List of all record types for the object(active and inactive) Author David Schach getStringRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Name as the value Signature global static List<SelectOption> getStringRecordTypesForSelectList(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<SelectOption>  Visualforce SelectOption list Author Evan Callahan isRecordTypeAvailable(objectName, recordTypeDevName) Is this record type(identified by developer name) available(and active) for the current user? Signature public static Boolean isRecordTypeAvailable(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns Boolean  Is this Record Type available to the running user? isRecordTypeDefault(objectName, recordTypeDevName) Is this record type(identified by developer name) the default record type for the current user? Signature public static Boolean isRecordTypeDefault(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns Boolean  Is this Record Type the default for the running user?"
    },
    {
        "title": "RecordTypesTest",
        "fileName": "RecordTypesTest.html",
        "text": "RecordTypesTest Test class for RecordTypes.cls Signature @IsTest private class RecordTypesTest See RecordTypes Author Evan Callahan Since 2010 Author David Schach Since 2021 Various enhancements and updates to use new Apex methods 2023 Addition of methods to handle no profile-based RT permissions with permissions via permission set 2024 Check for case insensitivity RecordTypesTest Properties Name Signature Description gd private static Map<String, Schema.SObjectType> gd Memoize global describe, as we call it multiple times in this class RecordTypesTest Methods resetTest() Clear all record type maps to enable using fewer test methods - reset within a method testAccountRecordTypes() Separate method for checking if we have Account record type, and then testing that testAccountRecordTypesLowercase() Separate method for checking if we have Account record type, and then testing that testAccountRecTypes() Test against Account, an object with record types in package testing testAccountRecTypesCaseInsensitive() Test against account, an object with record types in package testing testBogusRecordTypes() Separate method for checking if we have record types for a nonexistent object, and then testing that testBogusRecTypes() Test various record types and names We test nonexistent object names, nonexistent record type names, null values, and existing Account record type(if available) testContactRecordTypes() Separate method for checking if we have Contact record type, and then testing that testSObjectRecordTypeReturns(sobjectname) Utility class for testing various objects against the RecordTypes  library resetTest() Clear all record type maps to enable using fewer test methods - reset within a method Signature private static void resetTest() Author David Schach testAccountRecordTypes() Separate method for checking if we have Account record type, and then testing that Signature @IsTest private static void testAccountRecordTypes() See testSObjectRecordTypeReturns Author David Schach testAccountRecordTypesLowercase() Separate method for checking if we have Account record type, and then testing that Signature @IsTest private static void testAccountRecordTypesLowercase() See testSObjectRecordTypeReturns Author David Schach testAccountRecTypes() Test against Account, an object with record types in package testing Signature @IsTest private static void testAccountRecTypes() Author Evan Callahan testAccountRecTypesCaseInsensitive() Test against account, an object with record types in package testing Signature @IsTest private static void testAccountRecTypesCaseInsensitive() Author Evan Callahan testBogusRecordTypes() Separate method for checking if we have record types for a nonexistent object, and then testing that Signature @IsTest private static void testBogusRecordTypes() See testSObjectRecordTypeReturns Author David Schach testBogusRecTypes() Test various record types and names We test nonexistent object names, nonexistent record type names, null values, and existing Account record type(if available) Signature @IsTest private static void testBogusRecTypes() Author Evan Callahan testContactRecordTypes() Separate method for checking if we have Contact record type, and then testing that Signature @IsTest private static void testContactRecordTypes() See testSObjectRecordTypeReturns Author David Schach testSObjectRecordTypeReturns(sobjectname) Utility class for testing various objects against the RecordTypes  library Signature private static Boolean testSObjectRecordTypeReturns(String sobjectname) Parameters sobjectname Type: String Name of the object to test for record types Returns true  if all assertions pass"
    },
    {
        "title": "SelectListsController",
        "fileName": "SelectListsController.html",
        "text": "SelectListsController Class for testing RecordTypes  picklist methods NOT included in the unlocked package Signature @SuppressWarnings('PMD.ApexDoc') public with sharing class SelectListsController Author David Schach Since 2024 SelectListsController Properties Name Signature gd private Map<String, Schema.SObjectType> gd objectPicklist public List<SelectOption> objectPicklist selectedObjectName public String selectedObjectName SelectListsController Constructors SelectListsController() SelectListsController() Signature @SuppressWarnings public SelectListsController() SelectListsController Methods getAllAvailableRTs() getAllRTs() getAllAvailableRTs() Signature public List<SelectOption> getAllAvailableRTs() getAllRTs() Signature public List<SelectOption> getAllRTs()"
    },
    {
        "title": "SelectListsControllerTest",
        "fileName": "SelectListsControllerTest.html",
        "text": "SelectListsControllerTest Test class for SelectListController NOT included in the unlocked package Signature @IsTest public with sharing class SelectListsControllerTest Author David Schach Since 2024 SelectListsControllerTest Methods testController() testController() Signature @IsTest static void testController()"
    },
    {
        "title": "UnpackagedRecordTypesTest",
        "fileName": "UnpackagedRecordTypesTest.html",
        "text": "UnpackagedRecordTypesTest Test unpackaged metadata to cover additional possibilities Signature @IsTest private class UnpackagedRecordTypesTest Author David Schach Since 2024 UnpackagedRecordTypesTest Methods resetTest() Clear all record type maps to enable using fewer test methods - reset within a method testAccountRecTypes() Test against Account, an object with record types in package testing, but with lowercase RT name Assumes we have a record type called Default  and tests Default testAccountRecTypesLowercaseRT() Test against Account, an object with record types in package testing, but with lowercase RT name Assumes we have a record type called Default  and tests default testMethodsAfterReset() Test for running certain methods without filling maps testSolutionRecTypes() Test against Solution, an object likely to have no record types resetTest() Clear all record type maps to enable using fewer test methods - reset within a method Signature private static void resetTest() Author David Schach testAccountRecTypes() Test against Account, an object with record types in package testing, but with lowercase RT name Assumes we have a record type called Default  and tests Default Signature @IsTest private static void testAccountRecTypes() Authors Evan Callahan, David Schach testAccountRecTypesLowercaseRT() Test against Account, an object with record types in package testing, but with lowercase RT name Assumes we have a record type called Default  and tests default Signature @IsTest private static void testAccountRecTypesLowercaseRT() Authors Evan Callahan, David Schach testMethodsAfterReset() Test for running certain methods without filling maps Signature @IsTest static void testMethodsAfterReset() testSolutionRecTypes() Test against Solution, an object likely to have no record types Signature @IsTest private static void testSolutionRecTypes() Authors Evan Callahan, David Schach"
    }
];
