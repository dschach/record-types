export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home Record Types Utilities Original Header Written by Evan Callahan, copyright(c) 2010 Groundwire This program is released under the GNU General Public License. http://www.gnu.org/licenses/ This class is meant to allow for access to Record Type information from within other classes. It is called statically, and therefore will supply the same information to all calls made from within one transaction, or set of trigger calls. This is beneficial because this info should be the same for all calls in a transaction, and by calling it statically we reduce the calls that are made, making the total transaction more efficient. Additional/Changed Header Updated by David Schach, 2021, X-Squared on Demand This class is allows for easy, readable access to Record Type information from other classes. Usage recommendation: Always use DeveloperName instead of Name, as this is more likely to be hard-coded in places, while the Name is actually a label and may change(especially due to user language)."
    },
    {
        "title": "RecordTypes",
        "fileName": "RecordTypes.html",
        "text": "RecordTypes This class is allows for easy, readable access to Record Type information from other classes.  Written by Evan Callahan, copyright(c) 2010 Groundwire Updated by David Schach, copyright(c) 2021  This program is released under the GNU General Public License. http://www.gnu.org/licenses/  This class is meant to allow for access to Record Type information from within other classes.  It is called statically, and therefore will supply the same information to all calls made from within one transaction, or set of trigger calls. This is beneficial because this info should be the same for all calls in a transaction, and by calling it statically we reduce the calls that are made, making the total transaction more efficient.  Usage recommendation: Always use DeveloperName instead of Name, as this is more likely to be hard-coded in places, while the Name is actually a label and may change(especially due to user language). Signature global inherited sharing class RecordTypes See RecordTypesTest Author Evan Callahan , Groundwire Since 2010 Author David Schach , X-Squared on Demand Since 2021 Author Nicolas Vasquez, Globant Since 2022 RecordTypes Properties Name Signature Description gd private static Map<String, Schema.SObjectType> gd Global schema describe recordTypeDevNamesById private static Map<Id, String> recordTypeDevNamesById Map of queried RecordType  DeveloperName by Id recordTypeNamesById private static Map<Id, String> recordTypeNamesById Map of queried RecordType  Name by Id recordTypesByDevName private static Map<String, Map<String, Schema.RecordTypeInfo>> recordTypesByDevName Map of Record Types by sObject name, then by DeveloperName recordTypesById private static Map<String, Map<Id, Schema.RecordTypeInfo>> recordTypesById Map of Record Types by sObject name, then by Id recordTypesByName private static Map<String, Map<String, Schema.RecordTypeInfo>> recordTypesByName Map of Record Types by sObject name, then by Name recordTypesIdMap private static Map<Id, RecordType> recordTypesIdMap Memoized map of queried RecordType  records by Id recordTypesList private static List<Schema.Recordtypeinfo> recordTypesList List of Record Type Info sObjects RecordTypes Methods clearMapsInTest() If we are running a test, clear sObject maps. We do this to avoid using @testVisible on the maps This is private and testvisible so it cannot be called in production code context fillMapsForObject(objectName) Gets record type maps for a new sObject We check in each public method if the sObject has already been described so we do not eagerly load DescribeSObjectResult getAvailableRecordTypeDevNameIdMap(sObjectName) Gives a map of all ACTIVE RecordTypeId s by developername  for an sObject getAvailableRecordTypeNameIdMap(sObjectName) Gives a map of all ACTIVE RecordTypeId s by name for an sObject getRecordType(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  object getRecordTypeDevNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  DeveloperName This saves a query on the RecordType  object getRecordTypeDevNameFromId(recordTypeId) Generate map of all record type developer names by Id & return Record Type DeveloperName getRecordTypeDevNameFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  methods instead getRecordTypeDevNameIdMap(objectName) Gives a map of all record type IDs by DeveloperName for an sObject getRecordTypeFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id getRecordTypeFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the Record Type  object getRecordTypeFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  object Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  instead getRecordTypeIdFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id This should be the most-used method in this class getRecordTypeIdFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  instead getRecordTypeIdSetFromDevNames(objectName, recordTypeDevNameSet) Gives a set of RecordType  Ids from an sObject and a set of RecordType  Developernames getRecordTypeNameFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Name getRecordTypeNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  Name getRecordTypeNameFromId(recordTypeId) Generate map of all record type names by Id & return Record Type Name getRecordTypeNameIdMap(objectName) Gives a map of all RecordType  IDs by name for an sObject getRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Id as the value getStringRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Name as the value clearMapsInTest() If we are running a test, clear sObject maps. We do this to avoid using @testVisible on the maps This is private and testvisible so it cannot be called in production code context Signature @testVisible private static void clearMapsInTest() fillMapsForObject(objectName) Gets record type maps for a new sObject We check in each public method if the sObject has already been described so we do not eagerly load DescribeSObjectResult Signature private static void fillMapsForObject(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Author David Schach getAvailableRecordTypeDevNameIdMap(sObjectName) Gives a map of all ACTIVE RecordTypeId s by developername  for an sObject Signature global static Map<String, Id> getAvailableRecordTypeDevNameIdMap(String sObjectName) Parameters sObjectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Author Nicolas Vasquez getAvailableRecordTypeNameIdMap(sObjectName) Gives a map of all ACTIVE RecordTypeId s by name for an sObject Signature global static Map<String, Id> getAvailableRecordTypeNameIdMap(String sObjectName) Parameters sObjectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Author Nicolas Vasquez getRecordType(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  object Signature global static Schema.RecordTypeInfo getRecordType(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach getRecordTypeDevNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  DeveloperName This saves a query on the RecordType  object Signature global static String getRecordTypeDevNameFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns RecordType  DeveloperName Author David Schach getRecordTypeDevNameFromId(recordTypeId) Generate map of all record type developer names by Id & return Record Type DeveloperName Signature global static String getRecordTypeDevNameFromId(Id recordTypeId) Parameters recordTypeId Type: Id RecordTypeId Returns String  Record Type Name Author David Schach Since 2022-03-29 getRecordTypeDevNameFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  methods instead Signature global static String getRecordTypeDevNameFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns RecordType.DeveloperName Author David Schach Example RecordTypes.getRecordTypeDevNameFromName('Account','Person Account') getRecordTypeDevNameIdMap(objectName) Gives a map of all record type IDs by DeveloperName for an sObject Signature global static Map<String, Id> getRecordTypeDevNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<recordTypeDevName, RecordType Id> Author David Schach getRecordTypeFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id Signature global static Schema.RecordTypeInfo getRecordTypeFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach Example RecordTypes.getRecordTypeFromDevName('Account','Person_Account') getRecordTypeFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the Record Type  object Signature global static Schema.RecordTypeInfo getRecordTypeFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach getRecordTypeFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  object Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  instead Signature global static Schema.RecordTypeInfo getRecordTypeFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns Schema.RecordTypeInfo  RecordTypeInfo object Author David Schach getRecordTypeIdFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Id This should be the most-used method in this class Signature global static Id getRecordTypeIdFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns RecordType Id Author David Schach Example RecordTypes.getRecordTypeIdFromDevName('Account','Person_Account') getRecordTypeIdFromName(objectName, recordTypeName) Given an sObject and RecordType  Name, return the RecordType  Id Note: Since RecordType.Name  is not unique, this section could give unpredicable results If possible, DO NOT USE this method - use RecordType.DeveloperName  instead Signature global static Id getRecordTypeIdFromName(String objectName, String recordTypeName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeName Type: String RecordType Name(can include spaces) Returns RecordType Id Author David Schach Example RecordTypes.getRecordTypeIdFromName('Account','Person Account') getRecordTypeIdSetFromDevNames(objectName, recordTypeDevNameSet) Gives a set of RecordType  Ids from an sObject and a set of RecordType  Developernames Signature global static Set<Id> getRecordTypeIdSetFromDevNames(String objectName, Set<String> recordTypeDevNameSet) Parameters objectName Type: String Object of interest recordTypeDevNameSet Type: Set<String> Set of DeveloperNames Returns Set<Id>  All RecordType  IDs for a given sObject Author David Schach Example Set<String> rtNames = new Set<String> {'Person_Account', 'Customer'}; getRecordTypeIdSetFromDevNames('Account', rtNames); getRecordTypeNameFromDevName(objectName, recordTypeDevName) Given an sObject and RecordType  DeveloperName, return the RecordType  Name Signature global static String getRecordTypeNameFromDevName(String objectName, String recordTypeDevName) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeDevName Type: String RecordType.DeveloperName (cannot include spaces) Returns RecordType Name Author David Schach Example RecordTypes.getRecordTypeNameFromDevName('Account','Person_Account') getRecordTypeNameFromId(objectName, recordTypeId) Given an sObject and RecordType  Id, return the RecordType  Name Signature global static String getRecordTypeNameFromId(String objectName, Id recordTypeId) Parameters objectName Type: String SObject name(with __c if custom, etc) recordTypeId Type: Id RecordType Id Returns RecordType Name Author David Schach getRecordTypeNameFromId(recordTypeId) Generate map of all record type names by Id & return Record Type Name Signature global static String getRecordTypeNameFromId(Id recordTypeId) Parameters recordTypeId Type: Id RecordTypeId Returns String  Record Type Name Author David Schach Since 2022-03-29 getRecordTypeNameIdMap(objectName) Gives a map of all RecordType  IDs by name for an sObject Signature global static Map<String, Id> getRecordTypeNameIdMap(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns Map<String, Id>  Map<RecordType Name, RecordType Id> Author Evan Callahan getRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Id as the value Signature global static List<SelectOption> getRecordTypesForSelectList(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<SelectOption>  Visualforce SelectOption list Author Evan Callahan getStringRecordTypesForSelectList(objectName) Make a Visualforce picklist with the RecordType  Name displayed and the RecordType  Name as the value Signature global static List<SelectOption> getStringRecordTypesForSelectList(String objectName) Parameters objectName Type: String SObject name(with __c if custom, etc) Returns List<SelectOption>  Visualforce SelectOption list Author Evan Callahan"
    },
    {
        "title": "RecordTypesTest",
        "fileName": "RecordTypesTest.html",
        "text": "RecordTypesTest Test class for RecordTypes.cls Signature @IsTest private class RecordTypesTest See RecordTypes Author Evan Callahan Since 2010 Author David Schach Since 2021 RecordTypesTest Methods resetTest() Clear all record type maps to enable using fewer test methods - reset within a method testAccountRecordType() Separate method for checking if we have Account record type, and then testing that testRecTypes() Test various record types and names We test nonexistent object names, nonexistent record type names, null values, and existing Account record type(if available) resetTest() Clear all record type maps to enable using fewer test methods - reset within a method Signature private static void resetTest() Author David Schach testAccountRecordType() Separate method for checking if we have Account record type, and then testing that Signature @isTest private static void testAccountRecordType() Author David Schach testRecTypes() Test various record types and names We test nonexistent object names, nonexistent record type names, null values, and existing Account record type(if available) Signature @isTest private static void testRecTypes() Author Evan Callahan"
    }
];
